name: Node.js LINUX CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 20

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Clone or Update ipfs-microservice Repository locally
      run: |
        if [ ! -d "ipfs-microservice" ]; then
          git clone https://github.com/DeedLink/ipfs-microservice.git ipfs-microservice
        else
          cd ipfs-microservice
          git fetch origin
          git reset --hard origin/master
          cd ..
        fi

    - name: Add .env to ipfs-microservice
      run: |
        echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> ipfs-microservice/.env
        echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ipfs-microservice/.env
        echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> ipfs-microservice/.env
        echo "AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }}" >> ipfs-microservice/.env
        echo "PORT=5001" >> ipfs-microservice/.env

    - name: Run Docker Compose locally
      run: |
        cd ipfs-microservice
        docker-compose pull
        docker-compose up -d --remove-orphans

    - name: Build Docker Image
      run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/ipfs-microservice:latest ./ipfs-microservice

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Push Docker Image
      run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/ipfs-microservice:latest

    - name: Deploy via SSH to Amazon Linux EC2
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.LINUX_SERVER_IP }}
        username: ${{ secrets.LINUX_SERVER_USER }}
        key: ${{ secrets.LINUX_SERVER_SSH_KEY }}
        script: |
          # Set deployment directory
          DEPLOY_DIR=/home/ec2-user/deedlink-deployments
          mkdir -p $DEPLOY_DIR
          cd $DEPLOY_DIR

          # Install git if not installed
          sudo yum install git -y

          # Clone or update repository
          if [ ! -d "ipfs-microservice" ]; then
            git clone https://github.com/DeedLink/ipfs-microservice.git ipfs-microservice
          fi
          cd ipfs-microservice
          git fetch origin
          git reset --hard origin/master

          # Add environment variables
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" > .env
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
          echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> .env
          echo "AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }}" >> .env
          echo "PORT=5001" >> .env

          # Run Docker Compose
          docker-compose pull
          docker-compose down
          docker-compose up -d --remove-orphans
